{
  "name": "infusion",
  "description": "Infusion is an application framework for developing flexible stuff with JavaScript.",
  "version": "1.9.0-SNAPSHOT",
  "author": {
    "name": "Fluid Project"
  },
  "bugs": {
    "url": "http://issues.fluidproject.org/browse/FLUID"
  },
  "homepage": "http://www.fluidproject.org/",
  "dependencies": {
    "resolve": "1.1.6"
  },
  "licenses": [
    {
      "type": "BSD-3-Clause",
      "url": "http://www.opensource.org/licenses/BSD-3-Clause"
    },
    {
      "type": "ECL-2.0",
      "url": "http://www.opensource.org/licenses/ECL-2.0"
    }
  ],
  "keywords": [
    "infusion",
    "framework",
    "application",
    "fluid",
    "IoC",
    "Inversion of Control",
    "MVC",
    "evented"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/fluid-project/infusion.git"
  },
  "main": "./src/module/fluid.js",
  "engines": {
    "node": ">=0.1.9"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-uglify": "~0.2.2",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-compress": "~0.5.2",
    "grunt-contrib-stylus": "~0.20.0",
    "grunt-modulefiles": "git://github.com/fluid-project/grunt-modulefiles.git#0.2.1",
    "lodash": "~2.4.1",
    "grunt-contrib-jshint": "~0.9.0",
    "grunt-jsonlint": "1.0.4"
  },
  "gitHead": "78a1de4b10d2adb5e4dc294dc6473ee407f6c65c",
  "readme": "\n##What Is Infusion?##\n\nInfusion is a different kind of JavaScript framework. Our approach is to leave you in control-- it's your interface, using your markup, your way. Infusion is accessible and very, very configurable.\n\nInfusion includes:\n* an application framework for developing flexible stuff with JavaScript and jQuery\n* a collection of accessible UI components\n\n\n##Where Can I See Infusion Components?##\n\n<http://fluidproject.org/infusion.html>\n\n\n##How Do I Get Infusion?##\n\nYou can checkout and fork Infusion on github:\n\n<https://github.com/fluid-project/infusion>\n\nSee [How Do I Create an Infusion Package?](#how-do-i-create-an-infusion-package), for details on creating complete or custom packages of Infusion.\n\n##Who Makes Infusion, and How Can I Help?##\n\nThe Fluid community is an international group of designers, developers, and testers who focus on a common mission: improving the user experience and accessibility of the open web.\n\nThe best way to join the Fluid Community is to jump into any of our community activities. Visit our [website](http://fluidproject.org/) for links to our mailing lists, chat room, wiki, etc.\n\n##Where is Infusion Used?##\n\nThe Infusion library is the cornerstone of a number of projects. You can see some of them featured on our [Projects page](http://fluidproject.org/projects.html).\n\n##How Do I Create an Infusion Package?##\n\nStrictly speaking, Infusion can be used directly from source (i.e. by including each individual required file). However, for simplicity and performance reasons, you may wish to create a concatenated, minified file. The Grunt build options described below will also allow you to remove any unneeded features or libraries that you may already have in your project.\n\n###Dependencies###\n\n* [node.js](http://nodejs.org/)\n* [grunt-cli](http://gruntjs.com/)\n\nAll other dependencies will be installed by running the following from the project root:\n\n    npm install\n\n###Package Types###\n\n####Infusion All Build####\n\nWill include all of Infusion. The source files packaged along with the single concatenated js file will include all of the demos and unit tests. This is a good choice if you are trying to learn Infusion.\n\n    grunt\n\n#####Custom Build#####\n\nWill only include the modules you request, and all of their dependencies, minus any that are explicitly excluded. Unlike the \"all\" build, none of the demos or tests are included with a custom package.\n\n    grunt custom\n\n###Build Options###\n\n####--source####\n\n__value__: true (Boolean)\n_the value can be omitted if --source is the last flag specified_\n\nBy default all packages are minified. This option will allow you to maintain the readable spacing and comments.\n\n    grunt --source=true\n\n    grunt custom --source=true\n\n####--include####\n\n__value__: \"module(s)\" (String)\n_only available to custom packages_\n\nThe `--include` option takes in a comma-separated string of the [Modules](#modules) to be included in a custom package. If omitted, all modules will be included (demos and tests will not be included).\n\n    grunt custom --include=\"inlineEdit, uiOptions\"\n\n####--exclude####\n\n__value__: \"module(s)\" (String)\n_only available to custom packages_\n\nThe exclude option takes in a comma-separated string of the [Modules](#modules) to be excluded from a custom package. The `--exclude` option takes priority over `--include`.\n\n    grunt custom --exclude=\"jQuery\"\n\n    grunt custom --include=\"framework\" --exclude=\"jQuery\"\n\n####--name####\n\n__value__: \"custom suffix\" (String)\n_only available to custom packages_\n\nBy default, custom packages are given a name with the form _infusion-custom-<version>.zip_ and the concatenated js file is called _infusion-custom.js_. By supplying the `--name` option, you can replace \"custom\" with any other valid string you like.\n\n    grunt custom --name=\"myPackage\"    # this produces infusion-myPackage.js\n\n###Modules###\n\n####Framework Modules####\n\n* enhancement\n* framework\n* preferences\n* renderer\n\n####Component Modules####\n\n* inlineEdit\n* overviewPanel\n* pager\n* progress\n* reorderer\n* slidingPanel\n* tableOfContents\n* tabs\n* textfieldSlider\n* textToSpeech\n* tooltip\n* uiOptions\n* undo\n* uploader\n\n####External Libraries####\n\n* fastXmlPull\n* fonts\n* jQuery\n* jQueryScrollToPlugin\n* jQueryTouchPunchPlugin\n* jQueryUICore\n* jQueryUIWidgets\n* json\n* normalize\n\n##Developing with the Preferences Framework##\n\nInfusion is in the process of switching to use [Stylus](http://learnboost.github.io/stylus/) for CSS pre-processing. CSS files for the Preferences Framework have been re-written in Stylus. Only Stylus files are pushed into the github repository. For developing the Preferences Framework, run the following from the project root to compile Stylus files to CSS:\n\n    grunt buildStylus\n",
  "readmeFilename": "README.md",
  "_id": "infusion@1.9.0-SNAPSHOT",
  "_shasum": "3c86c787ca1060f8c4f13f9641a933604636b733",
  "_from": "fluid-project/infusion#1.9.x",
  "_resolved": "git://github.com/fluid-project/infusion.git#78a1de4b10d2adb5e4dc294dc6473ee407f6c65c"
}
